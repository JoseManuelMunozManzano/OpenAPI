openapi: 3.1.0
info:
  version: "1.0"
  title: OpenAPI Course
  description: "Specification for OpenAPI Course"
  termsOfService: https://example.com/terms/
  contact:
    name: José Manuel
    url: https://www.linkedin.com/in/jos%C3%A9-manuel-mu%C3%B1oz-manzano-423665185/
    email: neil_mercury@yahoo.es
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://dev.example.com
    description: Development Server
  - url: https://qa.example.com
    description: QA Server
  - url: https://prod.example.com
    description: Production Server
paths:
  /v1/customers:
    get:
      parameters:
        - $ref: "#/components/parameters/pageNumberParam"
        - $ref: "#/components/parameters/pageSizeParam"
      responses:
        "200":
          description: List of Customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customerPagedList"
  /v1/customers/{customerId}:
    get:
      parameters:
        - name: customerId
          in: path
          description: Customer id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found Customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer"
  /v1/beers:
    get:
      parameters:
        - $ref: "#/components/parameters/pageNumberParam"
        - $ref: "#/components/parameters/pageSizeParam"
      responses:
        "200":
          description: List of Beers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/beerPagedList"
        "404":
          description: No Beers Found
  /v1/beers/{beerId}:
    get:
      parameters:
        - name: beerId
          in: path
          description: Beer id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found Beer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/beer"
components:
  parameters:
    pageNumberParam:
      name: pageNumber
      in: query
      description: Page Number
      required: false
      schema:
        type: integer
        format: int32
        default: 1
    pageSizeParam:
      name: pageSize
      in: query
      description: Page Size
      required: false
      schema:
        type: integer
        format: int32
        default: 25
  schemas:
    address:
      type: object
      properties:
        line1:
          type: string
          example: 123 main
        city:
          type: string
          example: St Pete
        stateCode:
          type: string
          minLength: 2
          maxLength: 2
          description: 2 Letter State Code
          # enum: [AL, AK, AZ, AR, CA]
          enum:
            - AL
            - AK
            - AZ
            - AR
            - CA
        zipCode:
          type: string
          example: 33701
    customer:
      type: object
      description: Customer Object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          minLength: 2
          maxLength: 100
          example: José Manuel
        lastName:
          type: string
          minLength: 2
          maxLength: 100
          example: Muñoz
        address:
          $ref: "#/components/schemas/address"
    customerList:
      type: array
      minItems: 1
      maxItems: 100
      description: List of Customers
      items:
        $ref: "#/components/schemas/customer"
    customerPagedList:
      type: object
      allOf:
        - $ref: "#/components/schemas/pagedResponse"
      properties:
        content:
          $ref: "#/components/schemas/customerList"
    brewery:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
    beer:
      type: object
      description: Beer Object
      properties:
        beerName:
          type: string
        style:
          type: string
          enum:
            - ALE
            - PALE_ALE
            - IPA
            - WHEAT
            - LAGER
        upc:
          type: string
        price:
          type: number
          format: float
        quantityOnHand:
          type: integer
          format: int32
        brewery:
          $ref: "#/components/schemas/brewery"
    beerList:
      type: array
      description: List of Beers
      items:
        $ref: "#/components/schemas/beer"
    beerPagedList:
      type: object
      allOf:
        - $ref: "#/components/schemas/pagedResponse"
      properties:
        content:
          $ref: "#/components/schemas/beerList"
    pagedResponse:
      type: object
      properties:
        pageable:
          $ref: "#/components/schemas/pagedResponse_pageable"
        totalPages:
          type: integer
          format: int32
        last:
          type: boolean
        totalElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/pagedResponse_pageable_sort"
        first:
          type: boolean
    pagedResponse_pageable_sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
    pagedResponse_pageable:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/pagedResponse_pageable_sort"
        offset:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
