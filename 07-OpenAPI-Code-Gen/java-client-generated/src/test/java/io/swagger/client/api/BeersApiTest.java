/*
 * OpenAPI Course
 * Specification for OpenAPI Course
 *
 * OpenAPI spec version: 1.0
 * Contact: john@springframework.guru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Beer;
import io.swagger.client.model.BeerPagedList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BeersApi
 */
@Ignore
public class BeersApiTest {

    private final BeersApi api = new BeersApi();

    /**
     * Delete Beer by Id
     *
     * Delete a beer resource by its ID value.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBeerV1Test() throws ApiException {
        UUID beerId = null;
        api.deleteBeerV1(beerId);

        // TODO: test validations
    }
    /**
     * Get Beer by ID
     *
     * Get a single beer by its ID value.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBeerByIdV1Test() throws ApiException {
        UUID beerId = null;
        Beer response = api.getBeerByIdV1(beerId);

        // TODO: test validations
    }
    /**
     * List Beers
     *
     * List all beers in system.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBeersV1Test() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        BeerPagedList response = api.listBeersV1(pageNumber, pageSize);

        // TODO: test validations
    }
    /**
     * Update Beer by ID
     *
     * Update a beer by its ID value.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBeerByIdV1Test() throws ApiException {
        Beer body = null;
        UUID beerId = null;
        api.updateBeerByIdV1(body, beerId);

        // TODO: test validations
    }
    /**
     * New Beer
     *
     * Create a new Beer Object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1BeersPostTest() throws ApiException {
        Beer body = null;
        api.v1BeersPost(body);

        // TODO: test validations
    }
}
