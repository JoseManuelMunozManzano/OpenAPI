/*
 * OpenAPI Course
 * Specification for OpenAPI Course
 *
 * OpenAPI spec version: 1.0
 * Contact: john@springframework.guru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Customer;
import io.swagger.client.model.CustomerPagedList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Ignore
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Delete Customer By ID
     *
     * Delete a customer by its Id value.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomerV1Test() throws ApiException {
        UUID customerId = null;
        api.deleteCustomerV1(customerId);

        // TODO: test validations
    }
    /**
     * Get Customer By ID
     *
     * Get a single **Customer** by its Id value.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerByIdV1Test() throws ApiException {
        UUID customerId = null;
        Customer response = api.getCustomerByIdV1(customerId);

        // TODO: test validations
    }
    /**
     * List Customers
     *
     * Get a list of customers in the system
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCustomersV1Test() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        CustomerPagedList response = api.listCustomersV1(pageNumber, pageSize);

        // TODO: test validations
    }
    /**
     * Update Customer
     *
     * Update customer by id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1CustomersCustomerIdPutTest() throws ApiException {
        Customer body = null;
        UUID customerId = null;
        api.v1CustomersCustomerIdPut(body, customerId);

        // TODO: test validations
    }
    /**
     * New Customer
     *
     * Create a new customer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1CustomersPostTest() throws ApiException {
        Customer body = null;
        api.v1CustomersPost(body);

        // TODO: test validations
    }
}
